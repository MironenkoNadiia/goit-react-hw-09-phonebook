{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Toast/Toast.module.css","components/Filter/filter.module.css","components/ContactList/contactList.module.css","views/Phonebook-page/Phonebook.module.css","redux/phonebook/contacts-selectors.js","redux/phonebook/phonebook-operations.js","components/Toast/Toast.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/Phonebook-page/PhonebookPage.js"],"names":["module","exports","getAllContacts","state","contacts","items","getFilter","filter","selectors","getLoading","loading","getVisibleContacts","createSelector","contact","name","toLowerCase","includes","axios","defaults","baseURL","operations","fetchContacts","dispatch","fetchContactsRequest","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","message","addContact","number","addContactRequest","post","addContactSuccess","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","Toast","createPortal","className","s","container","document","querySelector","ContactForm","useDispatch","useSelector","phonebookSelectors","useState","setName","setNumber","haveError","setHaveError","errorMessage","setErrorMessage","showToast","setTimeout","CSSTransition","in","timeout","classNames","unmountOnExit","onSubmit","e","preventDefault","find","item","phonebookOperations","form","label","input","type","value","onChange","target","button","Filter","length","changeFilter","connect","onDeleteContact","id","TransitionGroup","component","list","map","appear","listItem","onClick","Phonebook","params","isLoading","useEffect","App","Loader","Container"],"mappings":"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","file":"static/js/3.03f68be7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1T5X6\",\"label\":\"ContactForm_label__hbWxr\",\"input\":\"ContactForm_input__3sStq\",\"button\":\"ContactForm_button__6PaKX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Toast_container__2EqYd\",\"message\":\"Toast_message__abt3c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"filter_input__1uwb7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__Z31gY\",\"listItem\":\"contactList_listItem__3iS7l\",\"button\":\"contactList_button__5Sqy-\",\"appear\":\"contactList_appear__3gXWc\",\"appearActive\":\"contactList_appearActive__2wBHo\",\"enter\":\"contactList_enter__3dB7l\",\"enterActive\":\"contactList_enterActive__1CW8o\",\"exit\":\"contactList_exit__3tbHr\",\"exitActive\":\"contactList_exitActive__3kAgp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Phonebook_App__kDM6g\",\"Container\":\"Phonebook_Container__CR5xH\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getLoading = (state) => state.contacts.loading;\r\nconst getAllContacts = (state) => {\r\n  return state.contacts.items;\r\n};\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n);\r\n\r\nconst selectors = { getLoading, getAllContacts, getFilter, getVisibleContacts };\r\n\r\nexport default selectors;\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  fetchContactsSuccess,\r\n  addContactRequest,\r\n  deleteContactRequest,\r\n  fetchContactsRequest,\r\n  addContactError,\r\n  deleteContactError,\r\n  fetchContactsError,\r\n} from \"./phonebook-actions\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(fetchContactsError(error.message)));\r\n};\r\n\r\nconst addContact = (name, number) => (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nconst operations = { fetchContacts, addContact, deleteContact };\r\n\r\nexport default operations;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Toast.module.css\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nfunction Toast({ message }) {\r\n  return createPortal(\r\n    <div className={s.container}>\r\n      <p className={s.message}>{message}</p>\r\n    </div>,\r\n    document.querySelector(\"#toast\")\r\n  );\r\n}\r\n\r\nToast.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Toast;\r\n","import React, { useState } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport Toast from \"../Toast/Toast\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport phonebookSelectors from \"../../redux/phonebook/contacts-selectors\";\r\nimport phonebookOperations from \"../../redux/phonebook/phonebook-operations\";\r\n\r\nexport default function ContactForm () {\r\n  // static propTypes = {\r\n  //   onAddContact: PropTypes.func.isRequired,\r\n  // };\r\n\r\n  // state = {\r\n  //   name: \"\",\r\n  //   number: \"\",\r\n  //   haveError: false,\r\n  // };\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(phonebookSelectors.getAllContacts);\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [haveError, setHaveError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  // handleChange = (e) => {\r\n  //   this.setState({\r\n  //     [e.target.name]: e.target.value,\r\n  //   });\r\n  // };\r\n\r\n  // handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n\r\n  //   const { name, number } = this.state;\r\n\r\n  //   if (name === \"\" || number === \"\") {\r\n  //     this.showToast(\"Name or number can't be empty string\");\r\n\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (this.props.contacts.find((item) => item.name === name)) {\r\n  //     this.showToast(`${name} is already in contacts`);\r\n  //     this.setState({ name: \"\", number: \"\" });\r\n  //     return;\r\n  //   }\r\n\r\n  //   this.props.onAddContact(name, number);\r\n\r\n  //   this.setState({ name: \"\", number: \"\" });\r\n  // };\r\n\r\n  // showToast = (message) => {\r\n  //   this.setState((prev) => ({\r\n  //     haveError: !prev.haveError,\r\n  //     errorMessage: message,\r\n  //   }));\r\n  //   setTimeout(() => {\r\n  //     this.setState((prev) => ({\r\n  //       haveError: !prev.haveError,\r\n  //     }));\r\n  //   }, 1500);\r\n  // };\r\n\r\n  \r\n    // const { errorMessage, haveError } = this.state;\r\n  \r\n  const handleChangeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleChangeNumber = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const showToast = (message) => {\r\n    setHaveError(true);\r\n    setErrorMessage(message);\r\n    setTimeout(() => {\r\n      setHaveError(false);\r\n    }, 1500);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (name === \"\" || number === \"\") {\r\n      showToast(\"Name or number can't be empty string\");\r\n\r\n      return;\r\n    }\r\n\r\n    if (contacts.find((item) => item.name === name)) {\r\n      showToast(`${name} is already in contacts`);\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n      return;\r\n    }\r\n\r\n    dispatch(phonebookOperations.addContact(name, number));\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={haveError}\r\n          timeout={250}\r\n          classNames=\"toast\"\r\n          unmountOnExit\r\n        >\r\n          <Toast message={errorMessage} />\r\n        </CSSTransition>\r\n\r\n        <form onSubmit={handleSubmit} className={s.form}>\r\n          <label className={s.label}>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={handleChangeName}\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            Number\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={handleChangeNumber}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={s.button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   contacts: phonebookSelectors.getAllContacts(state),\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onAddContact: (name, phone) =>\r\n//     dispatch(phonebookOperations.addContact(name, phone)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport s from \"./filter.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/phonebook/phonebook-actions\";\r\nimport phonebookSelectors from \"../../redux/phonebook/contacts-selectors\";\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(phonebookSelectors.getFilter);\r\n  const items = useSelector(phonebookSelectors.getAllContacts);\r\n  return (\r\n    <CSSTransition\r\n      in={items.length > 0}\r\n      timeout={500}\r\n      classNames=\"filter\"\r\n      unmountOnExit\r\n    >\r\n      <div>\r\n        <h3>Find contact by name</h3>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => dispatch(changeFilter(e.target.value))}\r\n        />\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n};\r\n// Filter.propTypes = {\r\n//   value: PropTypes.string,\r\n//   onChangeFilter: PropTypes.func.isRequired,\r\n// };\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   value: phonebookSelectors.getFilter(state),\r\n//   items: phonebookSelectors.getAllContacts(state),\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onChangeFilter: (e) => dispatch(changeFilter(e.target.value)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./contactList.module.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport phonebookOperations from \"../../redux/phonebook/phonebook-operations\";\r\nimport phonebookSelectors from \"../../redux/phonebook/contacts-selectors\";\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={s.list}>\r\n      {contacts.length === 0 ? (\r\n        <CSSTransition\r\n          key={1}\r\n          timeout={700}\r\n          classNames=\"message-empty\"\r\n          unmountOnExit\r\n        >\r\n          <li>Contact list empty for now</li>\r\n        </CSSTransition>\r\n      ) : (\r\n        contacts.map(({ name, number, id }) => {\r\n          return (\r\n            <CSSTransition key={id} appear={true} timeout={250} classNames={s}>\r\n              <li className={s.listItem}>\r\n                <span>\r\n                  {name}: {number}\r\n                </span>\r\n                <button\r\n                  type=\"button\"\r\n                  className={s.button}\r\n                  onClick={() => onDeleteContact(id)}\r\n                >\r\n                  Delete contact\r\n                </button>\r\n              </li>\r\n            </CSSTransition>\r\n          );\r\n        })\r\n      )}\r\n    </TransitionGroup>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n      id: PropTypes.string,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: phonebookSelectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(phonebookOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport phonebookSelectors from \"../../redux/phonebook/contacts-selectors\";\r\nimport phonebookOperations from \"../../redux/phonebook/phonebook-operations\";\r\nimport ContactForm from \"../../components/ContactForm/ContactForm\";\r\nimport Filter from \"../../components/Filter/Filter\";\r\nimport ContactList from \"../../components/ContactList/ContactList\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport s from \"./Phonebook.module.css\";\r\n\r\nexport default function Phonebook(params) {\r\n  // componentDidMount() {\r\n  //   this.props.fetchContacts();\r\n  // }\r\nconst dispatch = useDispatch();\r\nconst isLoading = useSelector(phonebookSelectors.getLoading);\r\n\r\nuseEffect(() => {\r\n  dispatch(phonebookOperations.fetchContacts());\r\n}, [dispatch]);\r\n  \r\n    return (\r\n      <div className={s.App}>\r\n        {isLoading && <Loader />}\r\n\r\n        <div className={s.Container}>\r\n          <CSSTransition\r\n            in={true}\r\n            appear={true}\r\n            timeout={500}\r\n            classNames=\"title\"\r\n            unmountOnExit\r\n          >\r\n            <h1>Phonebook</h1>\r\n          </CSSTransition>\r\n\r\n          <ContactForm />\r\n\r\n          <h1>Contacts</h1>\r\n\r\n          <Filter />\r\n\r\n          <ContactList />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   isLoading: phonebookSelectors.getLoading(state),\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   fetchContacts: () => dispatch(phonebookOperations.fetchContacts()),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n"],"sourceRoot":""}